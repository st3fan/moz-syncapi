// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at http://mozilla.org/MPL/2.0/

package sync

import (
	"bytes"
	"testing"
)

func Test_KeyBundle(t *testing.T) {
	keyBundle, err := NewKeyBundle([]byte{0xd0, 0x2d, 0x8f, 0xe3, 0x9f, 0x28, 0xb6, 0x01, 0x15, 0x9c, 0x54, 0x3f, 0x2d, 0xee, 0xb8, 0xf7,
		0x2b, 0xdf, 0x20, 0x43, 0xe8, 0x27, 0x9a, 0xa0, 0x84, 0x96, 0xfb, 0xd9, 0xeb, 0xae, 0xa3, 0x61})
	if err != nil {
		t.Error()
	}

	expectedEncryptionKey := []byte{0xae, 0xc2, 0xf0, 0x10, 0x29, 0x20, 0x3d, 0x87, 0x86, 0x6d, 0x89, 0x7d, 0xd9, 0xed, 0xb7, 0x16,
		0xc9, 0x1f, 0x21, 0xb8, 0x25, 0x77, 0xd4, 0xe0, 0x7a, 0x27, 0xc4, 0x68, 0x1f, 0x59, 0xc1, 0x32}
	if !bytes.Equal(expectedEncryptionKey, keyBundle.EncryptionKey) {
		t.Error()
	}

	expectedValidationKey := []byte{0x7e, 0xce, 0xf9, 0x12, 0xc7, 0x82, 0x0f, 0xf5, 0x4e, 0x2e, 0x87, 0x65, 0x20, 0x69, 0xb0, 0x35,
		0xa6, 0xc1, 0x8e, 0x14, 0xd8, 0x04, 0x71, 0x42, 0x7b, 0xb0, 0x86, 0x21, 0xfd, 0x2d, 0xf1, 0x3c}
	if !bytes.Equal(expectedValidationKey, keyBundle.ValidationKey) {
		t.Error()
	}
}
